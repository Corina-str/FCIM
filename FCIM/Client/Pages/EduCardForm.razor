@page "/educard"
@page "/educard/{id:int}"
@using BiroulSindicalFCIM.Client.Services
@using BiroulSindicalFCIM.Shared
@inject IEduCardService EduCardService

<div class="container">

    @if (Id == null)
    {
        <PageTitle>Add EduCard</PageTitle>
        <div class="row justify-content-center align-items-center">
            <div class="col-6">
                <br />
                <h3>Add new educard</h3>
                <br />
            </div>
        </div>
    }
    else
    {
        <PageTitle>Edit @educard.FirstName</PageTitle>
        <div class="row justify-content-center align-items-center">
            <div class="col-6">
                <br />
                <h3>Edit @educard.FirstName @educard.LastName</h3>
            </div>
        </div>
    }
    <div class="row justify-content-center">
        <div class="col-6">
            <EditForm Model="educard" OnSubmit="HandleSubmit">
                <div>
                    <label for="FirstName">First Name</label>
                    <InputText id="FirstName" @bind-Value="educard.FirstName" class="form-control"></InputText>
                    <Validation
                    age For="@(() => educard.FirstName)" />
                </div>
                <div>
                    <label for="LastName">Last Name</label>
                    <InputText id="LastName" @bind-Value="educard.LastName" class="form-control"></InputText>
                    <ValidationMessage For="@(() => educard.LastName)" />
                </div>
                <div>
                    <label for="Email">Email</label>
                    <InputText id="Email" @bind-Value="educard.Email" class="form-control"></InputText>
                    <ValidationMessage For="@(() => educard.Email)" />
                </div>
                <div>
                    <label for="MobileNo">Phone Number</label>
                    <InputText id="MobileNo" @bind-Value="educard.MobileNo" class="form-control"></InputText>
                    <ValidationMessage For="@(() => educard.MobileNo)" />
                </div>
                <div>
                    <label for="Grupa">Grupa acadaemica</label>
                    <InputText id="Grupa" @bind-Value="educard.Grupa" class="form-control"></InputText>
                    <ValidationMessage For="@(() => educard.Grupa)" />
                </div>
               
               

               
                <br />
                <button class="btn btn-secondary" type="submit">@btnText</button>
                <button class="btn btn-danger" type="button" @onclick="DeleteEduCard">Delete educard</button>
                <br />
            </EditForm>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    EduCard educard = new EduCard { };



    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New EduCard" : "Update EduCard";
        await EduCardService.GetEduCards();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {

        }
        else educard = await EduCardService.GetEduCardById((int)Id);
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await EduCardService.CreateEduCard(educard);
        }
        else{
            await EduCardService.UpdateEduCard(educard);
        }
    }

    async Task DeleteEduCard()
    {
        await EduCardService.DeleteEduCard(educard.Id);
    }
}
