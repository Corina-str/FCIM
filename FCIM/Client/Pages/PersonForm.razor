@page "/person"
@page "/person/{id:int}"
@using BiroulSindicalFCIM.Client.Services
@using BiroulSindicalFCIM.Shared
@inject IPersonService PersonService

<div class="container">

    @if (Id == null)
    {
        <PageTitle>Add Person</PageTitle>
        <div class="row justify-content-center align-items-center">
            <div class="col-6">
                <br />
                <h3>Add new person</h3>
                <br />
            </div>
        </div>
    }
    else
    {
        <PageTitle>Edit @person.FirstName</PageTitle>
        <div class="row justify-content-center align-items-center">
            <div class="col-6">
                <br />
                <h3>Edit @person.FirstName @person.LastName</h3>
            </div>
        </div>
    }
    <div class="row justify-content-center">
        <div class="col-6">
            <EditForm Model="person" OnSubmit="HandleSubmit">
                <div>
                    <label for="FirstName">First Name</label>
                    <InputText id="FirstName" @bind-Value="person.FirstName" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.FirstName)" />
                </div>
                <div>
                    <label for="LastName">Last Name</label>
                    <InputText id="LastName" @bind-Value="person.LastName" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.LastName)" />
                </div>
                <div>
                    <label for="Email">Email</label>
                    <InputText id="Email" @bind-Value="person.Email" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.Email)" />
                </div>
                <div>
                    <label for="Status">Status</label>
                    <InputText id="Status" @bind-Value="person.Status" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.Status)" />
                </div>
                <div>
                    <label for="MobileNo">Phone Number</label>
                    <InputText id="MobileNo" @bind-Value="person.MobileNo" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.MobileNo)" />
                </div>
                <div>
                    <label for="LastCamin">LastCamin</label>
                    <InputText id="LastCamin" @bind-Value="person.LastCamin" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.LastCamin)" />
                </div>
                <div>
                    <label for="LastRoom">LastRoom</label>
                    <InputText id="LastRoom" @bind-Value="person.LastRoom" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.LastRoom)" />
                </div>
               
                <div>
                    <label for="FutureCamin">FutureCamin</label>
                    <InputText id="FutureCamin" @bind-Value="person.FutureCamin" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.FutureCamin)" />
                </div>
               
                <div>
                    <label for="FutureRoom">FutureRoom</label>
                    <InputText id="FutureRoom" @bind-Value="person.FutureRoom" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.FutureRoom)" />
                </div>
               
                <div>
                    <label for="IDNP">IDNP</label>
                    <InputText id="IDNP" @bind-Value="person.IDNP" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.IDNP)" />
                </div>
               
                <div>
                    <label for="Comment">Comment</label>
                    <InputText id="Comment" @bind-Value="person.Comment" class="form-control"></InputText>
                    <ValidationMessage For="@(() => person.Comment)" />
                </div>
               

               
                <br />
                <button class="btn btn-secondary" type="submit">@btnText</button>
                <button class="btn btn-danger" type="button" @onclick="DeletePerson">Delete person</button>
                <br />
            </EditForm>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Person person = new Person { };



    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Person" : "Update Person";
        await PersonService.GetPersons();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {

        }
        else person = await PersonService.GetPersonById((int)Id);
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await PersonService.CreatePerson(person);
        }
        else{
            await PersonService.UpdatePerson(person);
        }
    }

    async Task DeletePerson()
    {
        await PersonService.DeletePerson(person.Id);
    }
}
